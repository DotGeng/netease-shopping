<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.netease.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.netease.model.Goods" >
    <id column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_price" property="goodsPrice" jdbcType="DOUBLE" />
    <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
    <result column="storage" property="storage" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="sold_count" property="soldCount" jdbcType="INTEGER" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="has_seal" property="hasSeal" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="goods_abstract" property="goodsAbstract" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_id, goods_name, goods_price, picture_url, storage, title, sold_count, seller_id, 
    has_seal, content, goods_abstract
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.netease.model.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.netease.model.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.netease.model.Goods" >
    insert into goods (goods_id, goods_name, goods_price, 
      picture_url, storage, title, 
      sold_count, seller_id, has_seal, 
      content, goods_abstract)
    values (#{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DOUBLE}, 
      #{pictureUrl,jdbcType=VARCHAR}, #{storage,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{soldCount,jdbcType=INTEGER}, #{sellerId,jdbcType=BIGINT}, #{hasSeal,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{goodsAbstract,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.netease.model.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsPrice != null" >
        goods_price,
      </if>
      <if test="pictureUrl != null" >
        picture_url,
      </if>
      <if test="storage != null" >
        storage,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="soldCount != null" >
        sold_count,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="hasSeal != null" >
        has_seal,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="goodsAbstract != null" >
        goods_abstract,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null" >
        #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="pictureUrl != null" >
        #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="soldCount != null" >
        #{soldCount,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="hasSeal != null" >
        #{hasSeal,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="goodsAbstract != null" >
        #{goodsAbstract,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netease.model.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null" >
        goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.pictureUrl != null" >
        picture_url = #{record.pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.storage != null" >
        storage = #{record.storage,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.soldCount != null" >
        sold_count = #{record.soldCount,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.hasSeal != null" >
        has_seal = #{record.hasSeal,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsAbstract != null" >
        goods_abstract = #{record.goodsAbstract,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      picture_url = #{record.pictureUrl,jdbcType=VARCHAR},
      storage = #{record.storage,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      sold_count = #{record.soldCount,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      has_seal = #{record.hasSeal,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      goods_abstract = #{record.goodsAbstract,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netease.model.Goods" >
    update goods
    <set >
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="pictureUrl != null" >
        picture_url = #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="storage != null" >
        storage = #{storage,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="soldCount != null" >
        sold_count = #{soldCount,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="hasSeal != null" >
        has_seal = #{hasSeal,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="goodsAbstract != null" >
        goods_abstract = #{goodsAbstract,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netease.model.Goods" >
    update goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      picture_url = #{pictureUrl,jdbcType=VARCHAR},
      storage = #{storage,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      sold_count = #{soldCount,jdbcType=INTEGER},
      seller_id = #{sellerId,jdbcType=BIGINT},
      has_seal = #{hasSeal,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      goods_abstract = #{goodsAbstract,jdbcType=VARCHAR}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
</mapper>